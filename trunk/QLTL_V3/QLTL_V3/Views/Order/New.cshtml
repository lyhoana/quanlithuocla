@model QLTL_V3.Models.Order
@{
    ViewBag.Title = "Create";
}
<h2>
    TAO HOA DON MOI</h2>
<script type="text/javascript">
    $(function () {
        $("#CustomerTerm").autocomplete({
            source: function (request, response) {
                // define a function to call your Action (assuming UserController)
                $.ajax({
                    url: '/Customer/SearchCustomer', type: "POST", dataType: "json",
                    // query will be the param used by your action method
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Name + "----" + item.Address, value: item.Name, Name: item.Name,
                                Address: item.Address, PhoneNo: item.PhoneNo, CustomerId: item.CustomerId,
                                CustomerTypeName: item.CustomerTypeName, CustomerTypeId: item.CustomerTypeId
                            }
                        }))
                    }
                })
            },
            select: function (event, ui) {

                document.getElementById("CustomerName").value = ui.item.Name;
                document.getElementById("CustomerAddress").value = ui.item.Address;
                document.getElementById("CustomerPhoneNo").value = ui.item.PhoneNo;
                document.getElementById("CustomerId").value = ui.item.CustomerId;
                document.getElementById("CustomerTypeName").value = ui.item.CustomerTypeName;
                document.getElementById("CustomerTypeId").value = ui.item.CustomerTypeId;

            },

            change: function (event, ui) {
                if (ui.item == null) {
                    document.getElementById("CustomerName").value = ''
                    document.getElementById("CustomerAddress").value = ''
                    document.getElementById("CustomerPhoneNo").value = ''
                    document.getElementById("CustomerId").value = '';
                    document.getElementById("CustomerTerm").focus();
                    document.getElementById("CustomerTypeName").value = '';
                    document.getElementById("CustomerTypeId").value = '';
                }
            },


            minLength: 1 // require at least one character from the user
        });

    });


    $(function () {
        $("#ProductName").autocomplete({
            source: function (request, response) {
                // define a function to call your Action (assuming UserController)
                $.ajax({
                    url: '/Product/SearchProduct', type: "POST", dataType: "json",
                    // query will be the param used by your action method
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Name, value: item.Name, ProductId: item.ProductId }
                        }))
                    }
                })
            },
            change: function (event, ui) {
                if (ui.item == null) {

                    document.getElementById("ProductName").focus();
                    document.getElementById("ProductName").select();

                }
            },


            minLength: 1 // require at least one character from the user
        });

    });



    $(function () {
        $("#ProductUnitName").autocomplete({
            source: function (request, response) {
                // define a function to call your Action (assuming UserController)
                $.ajax({
                    url: '/ProductUnit/SearchProductUnit', type: "POST", dataType: "json",
                    // query will be the param used by your action method
                    data: { term: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Name, value: item.Name, ProductUnitId: item.ProductUnitId }
                        }))
                    }
                })
            },
            select: function (event, ui) {
                var ProductUnitId = ui.item.value;
                var CustomerTypeId = document.getElementById("CustomerTypeId").value;
                var ProductId = document.getElementById("ProductId").value;

                $.post("/BuyPrice/GetPrice", { "term": term },
                    function (data) {
                        // Successful requests get here
                        // Update the page elements
                        alert(data.Price);
                    });
            },

            change: function (event, ui) {
                if (ui.item == null) {


                }
            },


            minLength: 1 // require at least one character from the user
        });

    });


    $(document).keydown(function (e) {
        if (e.which == 17) isCtrl = true;
        if (e.which == 83 && isCtrl == true) {
            //run code for CTRL+S -- ie, save!
            document.getElementById("CustomerTerm").focus();
            isCtrl = false;
            return false;
        }
    });
</script>
<div class="editor-label">
    Tìm Khách Hàng Theo Tên
</div>
@Html.TextBox("CustomerTerm")
<fieldset>
    <legend>Thông Tin Khách Hàng</legend>
    <div class="editor-label">
        Tên Khách Hàng
    </div>
    <div class="editor-field">
        @Html.TextBox("CustomerName", null, new { disabled = "true" })
    </div>
    <div class="editor-label">
        Địa Chỉ
    </div>
    <div class="editor-field">
        @Html.TextBox("CustomerAddress", null, new { disabled = "true" })
    </div>
    <div class="editor-label">
        Số Điện Thoại
    </div>
    <div class="editor-field">
        @Html.TextBox("CustomerPhoneNo", null, new { disabled = "true" })
    </div>

     <div class="editor-label">
        Loại Khách Hàng
    </div>
    <div class="editor-field">
        @Html.TextBox("CustomerTypeName", null, new { disabled = "true" })
    </div>

    <div class="editor-field">
        @Html.Hidden("CustomerId")
    </div>
    <div class="editor-field">
        @Html.Hidden("CustomerTypeId")
    </div>
   
</fieldset>
<table>
    <tr>
        <th>
            Sản Phẩm
        </th>
        <th>
            Đơn Vị
        </th>
        <th>
            Đơn Giá
        </th>
        <th>
            Số Luợng
        </th>
        <th>
            Thành Tiền
        </th>
    </tr>
    <tr>
        <td>
            @Html.TextBox("ProductName")
        </td>
        <td>
            @Html.TextBox("ProductUnitName")
        </td>
        <td>
            @Html.TextBox("Price")
        </td>
        <td>
            @Html.TextBox("Amount", 1)
        </td>
        <td>
            @Html.TextBox("TotalAmount", null, new { disabled = "true" })
            <input type="submit" value="Them" />
        </td>
    </tr>
</table>
